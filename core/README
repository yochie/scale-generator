==Description==

Python script using the pywikibot framework that streamlines audio uploading to http://leviolondejos.wiki/ via the following
functionnalities:

  1. Recording midi input from a virtual midi port (user must install 3rd party software to connect midi instrument to this 
  port, see below)
  2. Automatically creating score image (.png) and midi file using music21 library
  3. Automatically uploading above files to the wiki along with semantic annotations (smw)
  4. Open form in browser to create page with additional information about the recording

==Dependencies==

The software requires the following packages to be installed on your system:
  
  *python 3.4 or above with the following libraries:
    **music21
    **mido
    **python-rtmidi
    
  *lilypond
  
  *pywikibot (tested on current nightly release with commit number 4bb76aa37d99, latest stable verions(2.0rc3 ) does not work 
  because of upload.py script not having the '-always' option yet. Once this option is included in stable release, you should
  use that one.)

==Requirements==
    
    1. The script has been tested in Ubuntu 16.04 and Windows 7. As far as I know, the required dependencies are available in
    Mac OS and none of the functions used in the script itself are platform dependent, so it should be possible to run in Mac
    as well. 
    
    2. Included configuration files from the piwikibot framework (user-config.py and .family files) are defined for an account
    on http://leviolondejos.wiki/, but you won't be able to run the bot there unless you have the password for the account.
    To get the bot to upload to our wiki (http://leviolondejos.wiki/), contact us using the contact information available at
    http://www.procedurable.com/ and if you're active enough in the community, we'll create a bot account for you. You'll then
    be able to modify the configuration files to work with the new account (see instructions at 
    https://www.mediawiki.org/wiki/Manual:Pywikibot/Third-party_Wiki_Quick_Start).

      2.1. If you're counting on running the bot for your own wiki (ie NOT on violondejos.wiki), you will have to modify to
      import or implement the wiki templates used by the bot, or change/remove them from in the script itself. I plan to make
      these defined in a config file in the future to make this simpler. Here is a list of the currently used templates, forms
      and their attributes that need to exist on the wiki in case you'd like to implement them yourself (yes, they are in
      french):

        Template: "Fichier"
          Attributes:
            "Concerne"
            "Est un fichier du type"
          Called by bot using: 
            {{Fichier
            |Concerne=<given page title>
            |Est un fichier du type=<"Score" or "MIDI" depending on file type>
            }}

        Form: "Enregistrement"
          Attributes:
            <None yet, implement whatever you'd like to collect additional information about the recording as its page is
            created (e.g. artist name, venue, key, time signature, etc)>
            
    3. Midi recording functionnalities rely on a preestablished midi connection of your device (midi controller) to the
    correct midi port. When you click the 'Record' button, the script prints to the terminal indicating which port it is
    listening to (I plan to make the port choosable in the future).The script currently looks for ports with "Midi" or
    "loopMIDI" in their name, but you can also add (or remove) some keywords in the "keywords" global variable at the
    top of the music_bot.py script (this should change since its just bad...). Once you know which port you're listening
    to, you need to ensure that your midi controller is indeed writing to that port. On windows, you can use the routing 
    functionnalities of MIDI-OX (http://midiox.com/) to help you achieve this (menu bar > Options > Midi Devices). If the
    music_bot script finds no available ports, it will print a message indicating this and shut down. While this shouldn't
    occur in Ubuntu as it provides a default midi port, you will most likely need something like loopMIDI 
    (https://www.tobias-erichsen.de/software/loopmidi.html) to create a midi port in windows. 
    
    4. Its also worth noting the this script doesn't currently play the sounds it records, so you might want to also use
    something like MIDI-OX (http://midiox.com/) to route your midi device input to a midi synthesizer (fluidsynth, 
    Windows MM, etc) that interprets midi signals to produce sounds. 


==Intallation and usage==

  Once the above dependencies are installed, paste the files in this git into the pywikibot installation folder (merge folders
  where required).You can then run the script from the command line by going into your pywikibot installation folder, logging 
  in the bot with the following command (note: this relies on configuration files in the installation folder that are included 
  in this github, but that need to be adapted for each bot user account and wiki, see pywikibot documentation on installing for
  third party wikis): 
  
    "python3 pwb.py login" 
  
  and then invoking the music_bot.py script with the following command:
  
    "python3 pwb.py music_bot"
    
   
   
==Disclaimer==
  
    Newby programmer at work. Feel free to tell me where my certainly numerous errors are to be found.
    I also don't know anything about licenses, but feel free to do anything you want with my code, located in 
    "/scripts/music_bot.py" and "/scripts/music_bot_analog.py".
  


  
